[[plugins]]
repo = 'preservim/nerdtree'
hook_add = '''
let g:NERDTreeWinSize=18
let g:NERDTreeShowBookmarks=1
let g:NERDTreeShowHidden=1
let g:NERDTreeIgnore=['\.git$','\.clean$','\.swp$','\.bak$','\._$']
autocmd VimEnter * NERDTree | wincmd p
autocmd BufEnter * if winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif
nnoremap <leader>n :NERDTreeFocus<CR>
nnoremap <silent> <C-k> :NERDTreeToggle<CR>
autocmd BufEnter * if winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif
"let g:NERDTreeDirArrowExpandable = '?'
"let g:NERDTreeDirArrowCollapsible = '?'
nnoremap <C-f> :NERDTreeFind<CR>
"autocmd VimEnter * if getcmdwintype() == '' | silent NERDTreeMirror | endif

" Function to open the file or NERDTree or netrw.
"   Returns: 1 if either file explorer was opened; otherwise, 0.
"function! s:OpenFileOrExplorer(...)
"    if a:0 == 0 || a:1 == ''
"        NERDTree
"    elseif filereadable(a:1)
"        execute 'edit '.a:1
"        return 0
"    elseif a:1 =~? '^\(scp\|ftp\)://' " Add other protocols as needed.
"        execute 'Vexplore '.a:1
"    elseif isdirectory(a:1)
"        execute 'NERDTree '.a:1
"    endif
"    return 1
"endfunction
"
"" Auto commands to handle OS commandline arguments
"autocmd StdinReadPre * let s:std_in=1
"autocmd VimEnter * if argc()==1 && !exists('s:std_in') | if <SID>OpenFileOrExplorer(argv()[0]) | wincmd p | enew | wincmd p | endif | endif
"
"" Command to call the OpenFileOrExplorer function.
"command! -n=? -complete=file -bar Edit :call <SID>OpenFileOrExplorer('<args>')
"
"" Command-mode abbreviation to replace the :edit Vim command.
"cnoreabbrev e Edit
'''


[[plugins]]
repo = 'reireias/vim-cheatsheet'
hook_add = '''
set runtimepath+=~/.cache/dein/repos/github.com/reireias/vim-cheatsheet/
let g:cheatsheet#cheat_file = '~/.config/nvim/cheatsheet/cheatsheet.txt'
let g:cheatsheet#float_window = 1
nmap <silent><Leader>cheat :Cheat<CR>

'''


[[plugins]]
repo = 't9md/vim-quickhl'
hook_add = '''
  set runtimepath+=~/.cache/dein/repos/github.com/t9md/vim-quickhl/
  nmap <Space>h <Plug>(quickhl-manual-this)
  xmap <Space>h <Plug>(quickhl-manual-this)
  nmap <Space>H <Plug>(quickhl-manual-reset)
'''

#[[plugins]]
#repo = 't9md/vim-foldtext'
#hook_add = '''
#  set runtimepath+=~/.cache/dein/repos/github.com/t9md/vim-foldtext/
#  let g:Foldtext_enable = 1
#'''


[[plugins]]
repo = 'osyo-manga/vim-brightest'
hook_add = '''
  set runtimepath+=~/.cache/dein/repos/github.com/osyo-manga/vim-highlight/
  let g:brightest#highlight = { "group" : "BrightestUnderline" }
  let g:brightest#pattern = '\k\+'
'''


[[plugins]]
repo = 'majutsushi/tagbar'
hook_add = '''
set runtimepath+=~/.cache/dein/repos/github.com/majutsushi/tagbar/
let g:tagbar_autoclose = 0
let g:tagbar_width = 20
autocmd FileType python,javascript,c,cpp,php nested :call tagbar#autoopen(0)
nnoremap <silent><c-l> :TagbarToggle<CR>
'''

[[plugins]]
repo = 'dhruvasagar/vim-table-mode'

[[plugins]]
repo = 'mattn/sonictemplate-vim'
hook_add = '''
set runtimepath+=~/.cache/dein/repos/github.com/mattn/sonictemplate-vim/
let g:sonictemplate_vim_template_dir = ['~/.cache/dein/repos/github.com/mattn/sonictemplate-vim/template','~/.config/nvim/template']
'''


[[plugins]]
repo = 'simeji/winresizer'
hook_add = '''
set runtimepath+=~/.cache/dein/repos/github.com/simeji/winresizer/
let g:winresizer_vert_resize = 1
let g:winresizer_horiz_resize = 1
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
let g:quickrun_config = {}
let g:quickrun_config.python = {'command':'python3'}
nmap <Leader>exe :QuickRun<CR>
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'Shougo/deol.nvim'
hook_add = '''
autocmd VimEnter * :Deol -split=horizontal -winheight=5 -start-insert=false | execute "normal! \<C-W>\<up>"
"| execute "normal! \<C-\>\<C-N>"
"| execute! "normal! \<C-W>r"
nmap <silent><c-t> :Deol -split=horizontal -winheight=5 -start-insert=false -toggle<CR>
'''


#[[plugins]]
#repo = 'tweekmonster/braceless.vim'
#on_ft = 'python'
#hook_add = '''
#autocmd FileType python BlacelessEnable +fold +highlight-cc2
#'''

[[plugins]]
repo = 'pseewald/vim-anyfold'
hook_add = '''
"autocmd Filetype * AnyFoldActivate
"let g:anyfold_fold_comments=1
"set foldlevel=0
"hi Folded term=NONE cterm=NONE
"filetype plugin indent on " required
syntax on                 " required

autocmd Filetype * AnyFoldActivate               " activate for all filetypes
" or
autocmd Filetype <your-filetype> AnyFoldActivate " activate for a specific filetype

set foldlevel=0  " close all folds
" or
set foldlevel=99 " Open all folds
'''
